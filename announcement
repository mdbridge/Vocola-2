Announcing the next major version of Vocola 2, 2.9.

This version has a lot of new powerful features including lists that can contain lists.  Full release notes are at the end of this message.

To upgrade to the new release, you may install it over any recent NatLink for Python 2 installation by downloading https://vocola.net/v2/Vocola-2-9.zip then

    unzip it to a temporary location, say T
    run (e.g., double click) T/install.bat
    (re)start Dragon

- Mark

Release notes for Vocola 2.9:

New in 2.9:

! Vocola lists may now contain lists; for example,
    <outer> := ( <inner> | just <l>=$1 | 1..20 );
  Those lists (e.g., <inner>) can in turn refer to other lists and so
  on.

* Lists may not be defined recursively; for example, the following is
  not allowed:
    <loop> := loop [<loop>];

! List entries containing lists may refer to those lists in the usual
  way in any definitions of those entries; for example,
    type (0..20 | minus 1..20 = -$1) = $1{tab};
  Here the first $1 in the subcommand "minus 1..20 = -$1" refers to the
  value of the "1..20" list.  Thus "go up minus 3" will result in
  sending the keys "-3{tab}".

* List entries containing a variable or inline list plus one or more
  other terms require an action assignment to tell Vocola how to combine
  the inputs; for example,
    <motion> := <direction> 1..10 = {$1_$2};
  This is a simple but conservative restriction that should be unlikely
  to kick in.  If needed, it will be loosened.

* For clarity, runtime errors while executing an alternative in a list
  now complain about that alternative rather than the the overall
  command.  For example in the following,
    test <thing> = $1;
    <thing> := divide badly = Eval(0/0);
  Vocola will complain about "divide badly" rather than "test <thing>".

* You may now use <_anything> as a command by itself; for example,
    <_anything> = "You said '$1'!";
  This will generally capture any dictation not caught by a more
  specific command.

! Fixed bug where title-specific commands could prevent
  non-title-specific commands of the same grammar from working.


* Vocola now has optional verbose debugging output for recognizing and
  executing commands.  This can be helpful for figuring out which
  command from where is being recognized, with which words, and what
  steps are taken to execute it.  How long executing a command takes can
  also be printed.  Initial verbosity level is zero (no output), but the
  level can be changed using the Vocola extension.

* Optional parts of a command are no longer handled by creating versions
  of the command with and without the optional part.  Instead, the
  generated grammar now directly encodes the optionality without
  duplication; this should reduce grammar complexity.  For complicated
  sets of grammars, this can reduce the delay when switching windows by
  up to 6 times.

* Grammar rules for unused lists are no longer emitted; this means there
  is no runtime overhead for including lists that you don't end up
  using.


! Vocola code generation has been rewritten to first produce a
  backend-agnostic Internal Instruction Language (IIL), which a backend
  then translates into a Python file that uses new runtime libraries to
  implement the needed functionality.

  This should make it much easier to re-target Vocola and improve the
  runtime functionality.

* The runtime for NatLink now independently parses the words that come
  back from Dragon; this allows using much more flexible grammars (e.g.,
  lists containing lists).

* There are currently two backends, one targeting NatLink directly and
  one targeting Dragonfly on NatLink.  Vocola is set up to use the first
  backend out-of-the-box.  The second backend has not been fully tested
  yet and is known to have some limitations mostly due to Dragonfly
  issues.  Known limitations when using dragonfly2==1.0.0-rc2 include:
    * All Vocola commands are implemented as Dragon application-specific
      commands
      * This means Vocola global commands are effectively
        application-specific in terms of priority
        * See https://vocola.net/v2/AmbiguousUtterances for more on
          command priorities
      * This also means that all global Vocola commands are unloaded
        every time you switch windows
        * This can substantially slow down recognition of commands when
          you switch windows when you are using complicated grammars
        * By contrast, with the non-Dragonfly backend, global command
          grammars are never unloaded unless modified
    * Combining <_anything> with other lists in a single command can
      produce command parsing failures
    * Commands containing "a" fail to be recognized

================================================================================


Announcing a Beta test of the next major version of Vocola 2, 2.9.

This version has a lot of new powerful features including lists that can
contain lists.  Full release notes are at the end of this message.  Note
that I have not yet updated the Vocola website documentation with the
new features; for now, rely on the release notes.

I have been running this version both at home and at work for months and
it has been very stable but there's a lot of new functionality and
changes so I decided to provide a beta-test version for a couple of
months before releasing the final version.

    If you want to try the beta release, you may install it over any
recent NatLink for Python 2 installation by downloading
https://vocola.net/v2/Vocola-2-9-beta.zip then

    unzip it to a temporary location, say T
    run (e.g., double click) T/install.bat
    (re)start Dragon

I recommend saving your old commands before doing this because, while
you can downgrade to the old version at any time, it only supports a
subset of the new functionality so changes or new commands you write
after upgrading that use new features will not work with the old version.

- Mark

Release notes for written Vocola 2.9 BETA:

New in 2.9:

! Vocola lists may now contain lists; for example,
    <outer> := ( <inner> | just <l>=$1 | 1..20 );
  Those lists (e.g., <inner>) can in turn refer to other lists and so
  on.

* Lists may not be defined recursively; for example, the following is
  not allowed:
    <loop> := loop [<loop>];

! List entries containing lists may refer to those lists in the usual
  way in any definitions of those entries; for example,
    type (0..20 | minus 1..20 = -$1) = $1{tab};
  Here the first $1 in the subcommand "minus 1..20 = -$1" refers to the
  value of the "1..20" list.  Thus "go up minus 3" will result in
  sending the keys "-3{tab}".

* List entries containing a variable or inline list plus one or more
  other terms require an action assignment to tell Vocola how to combine
  the inputs; for example,
    <motion> := <direction> 1..10 = {$1_$2};
  This is a simple but conservative restriction that should be unlikely
  to kick in.  If needed, it will be loosened.

* For clarity, runtime errors while executing an alternative in a list
  now complain about that alternative rather than the the overall
  command.  For example in the following,
    test <thing> = $1;
    <thing> := divide badly = Eval(0/0);
  Vocola will complain about "divide badly" rather than "test <thing>".

* You may now use <_anything> as a command by itself; for example,
    <_anything> = "You said '$1'!";
  This will generally capture any dictation not caught by a more
  specific command.

! Fixed bug where title-specific commands could prevent
  non-title-specific commands of the same grammar from working.


* Vocola now has optional verbose debugging output for recognizing and
  executing commands.  This can be helpful for figuring out which
  command from where is being recognized, with which words, and what
  steps are taken to execute it.  How long executing a command takes can
  also be printed.  Initial verbosity level is zero (no output), but the
  level can be changed using the Vocola extension.

* Optional parts of a command are no longer handled by creating versions
  of the command with and without the optional part.  Instead, the
  generated grammar now directly encodes the optionality without
  duplication; this should reduce grammar complexity.  For complicated
  sets of grammars, this can reduce the delay when switching windows by
  up to 6 times.

* Grammar rules for unused lists are no longer emitted; this means there
  is no runtime overhead for including lists that you don't end up
  using.


! Vocola code generation has been rewritten to first produce a
  backend-agnostic Internal Instruction Language (IIL), which a backend
  then translates into a Python file that uses new runtime libraries to
  implement the needed functionality.

  This should make it much easier to re-target Vocola and improve the
  runtime functionality.

* The runtime for NatLink now independently parses the words that come
  back from Dragon; this allows using much more flexible grammars (e.g.,
  lists containing lists).

* There are currently two backends, one targeting NatLink directly and
  one targeting Dragonfly on NatLink.  Vocola is set up to use the first
  backend out-of-the-box.  The second backend has not been fully tested
  yet and is known to have some limitations mostly due to Dragonfly
  issues.  To be written before the final release: a description of these
  limitations.

================================================================================


New release of Vocola 2, 2.8.8, now available

    Not a lot of notable changes since the last version (2.8.7):

* Attempting to use <_anything> as a command by itself now prints an
  error rather than crashing the compiler.

* Clipboard extension updated to version 2.1, which includes new
  WaitForValue procedure.


    I also made a lot of portability fixes to make Vocola 2 work with
Python 3 and (hopefully) with future NatLink versions that work with
Python 3.  Unfortunately, we still don't have a working installer for
the new version of NatLink so I was unable to make this version of
Vocola work with NatLink on Python 3.  :-(


    This is the last release of the 2.8.X series barring emergency hot
patches.  The next release will be 2.9, hopefully in alpha release in a
month or two.

    This release is probably not of great interest to most folks, but if
you want to upgrade to it, you may install Vocola 2.8.8 over any recent
NatLink for Python 2 installation by downloading
http://vocola.net/v2/Vocola-2-8-8.zip then

    unzip it to a temporary location, say T
    run (e.g., double click) T/install.bat
    (re)start Dragon

- Mark

================================================================================

New release of Vocola 2, 2.8.7, now available

    Notable changes since last version (2.8.6):

! By default, Vocola now uses SendInput instead of SendDragonKeys to
  send keystrokes.  This should work better in most cases: SendInput is
  immune to the character doubling/dropping bug, for example.
  SendInput, however, does not work with UAC-elevated windows and may
  have issues with some foreign-language keyboard settings.  

  Accordingly, you may now temporarily switch back to SendDragonKeys via
  a voice command, add code in the the DragonProxy extension (see below)
  to further translate keystrokes as needed, or simply delete the
  DragonProxy extension to permanently switch back to using
  SendDragonKeys.  

  More information on the different ways of sending keystrokes may be
  found on the Vocola 2 website at
  http://vocola.net/v2/SendingKeystrokes.asp.

! The following unofficial Vocola extensions have been made official,
  and are now included in the Vocola 2 release:
    Clipboard, Date, Env, Keys, Subprocess, Variable, and Vocola

! Python version 2.6 is no longer supported

* Vocola now supports a _Dragon proxy_, which is a special Vocola
  extension that can intercept and change or redirect Vocola's calls to
  Dragon.  A starter version of the proxy is provided which can switch
  back and forth between SendDragonKeys and SendInput for default
  keystrokes as well as print out Dragon actions when verbose mode is
  turned on.

* Vocola now prints an error if the user redefines an extension function

* A great deal of portability work has been done under the covers to
  make Vocola 2 work with Python 3.  Hopefully the next version will
  support Python 3.

* Vocola 2 is being refactored to be more flexible.  As part of this, it
  is now possible to choose a backend dynamically at "compile time".
  This is intended to be used for "cross-compilation" -- e.g., compiling
  to Dragonfly or Advanced Scripting instead of NatLink directly.
  Currently only NatLink and trivial echo backends are available.

    This will hopefully be the last version that only works with Python
2.  A combined installer that installs NatLink and this version of
Vocola will *not* be available -- the NatLink project is instead
focusing on a new version that works with Python 3.  This plus some
dependencies that have crept in for the installer means that the install
procedure for Vocola is somewhat longer than I would like.  See
http://vocola.net/v2/InstallVocola.asp for the installation
instructions.

- Mark

================================================================================

New release of Vocola 2, 2.8.6, now available


    Notable changes since last announced version (2.8.5):

! Grammar rules are now [de]activated as infrequently as possible; this
  improves performance with DNS 13/DPI 14, which take a long time to
  deactivate grammars.

* Executables whose names contain underscores are now properly handled.
  For example, a Vocola file named xyz_inc_edit__routines.vcl now
  contains commands that work only with executables named
  xyz_inc_edit__routines, xyz_inc_edit, xyz_inc, and xyz.

* As of DNS 13, <_anything> can no longer match nothing.  Accordingly,
  [<_anything>], [[with] <_anything>], and the like are now permitted.
  These were previously prohibited in an attempt to prohibit optional
  parts whose contents could be empty.

* Fixed an error where include statements were not interpreted relative
  to the file containing them.  For example, "include bar/baz.vch" in
  foo/zeep.vcl now correctly refers to foo/zeep/bar/baz.vch.


    A combined installer that installs NatLink and Vocola 2.8.6 will be
available soon.  In the meantime, you may install Vocola 2.8.6 over any
recent NatLink installation by downloading http://vocola.net/v2/Vocola-2-8-6.zip then

    unzip it to a temporary location, say T
    run (e.g., double click) T/install.bat
    (re)start Dragon

- Mark

##
## 
##

INPUT=input
FAIL_INPUT=input.fail

#ARGUMENTS=-f -extensions extensions.csv -debug 2
#ARGUMENTS=-f -extensions extensions.csv -INI_file Vocola.INI
ARGUMENTS=-f -extensions extensions.csv 

COMPILER=../src/exec/vcl2py.py
#COMPILER=../../dictation-toolbox-Vocola2/exec/vcl2py.py
PYTHON3=python3


compare-2:
	make setup-comparison
	-COMPUTERNAME=mdl python ${COMPILER} ${ARGUMENTS} -log_file /tmp/new.log      ${INPUT}      /tmp/new 
	-COMPUTERNAME=mdl python ${COMPILER} ${ARGUMENTS} -log_file /tmp/new-fail.log ${FAIL_INPUT} /tmp/new.fail
	make do-comparison

compare-3:
	make setup-comparison
	-COMPUTERNAME=mdl ${PYTHON3} ${COMPILER} ${ARGUMENTS} -log_file /tmp/new.log      ${INPUT}      /tmp/new 
	-COMPUTERNAME=mdl ${PYTHON3} ${COMPILER} ${ARGUMENTS} -log_file /tmp/new-fail.log ${FAIL_INPUT} /tmp/new.fail
	make do-comparison


setup-comparison:
	rm -rf /tmp/new.log /tmp/new.fail.log 
	rm -rf /tmp/new     /tmp/new.fail
	mkdir  /tmp/new     /tmp/new.fail

do-comparison:
	find /tmp/new      -type f -exec ruby -E Windows-1252 -i -pe 'gsub(/Generated by vcl2py 2\..*/, "VERSION")' {} \;
	find /tmp/new.fail -type f -exec ruby -E Windows-1252 -i -pe 'gsub(/Generated by vcl2py 2\..*/, "VERSION")' {} \;
	#
	-diff -r    /tmp/old          /tmp/new
	-diff       /tmp/old.log      /tmp/new.log
	-diff -b    /tmp/old-fail.log /tmp/new-fail.log
	-diff       /tmp/old-fail.log /tmp/new-fail.log


load-comparison:
	rm -rf /tmp/old.log /tmp/old.fail.log 
	rm -rf /tmp/old     /tmp/old.fail
	mkdir  /tmp/old     /tmp/old.fail
	-COMPUTERNAME=mdl python ../src/exec/vcl2py.py ${ARGUMENTS} -log_file /tmp/old.log      ${INPUT}      /tmp/old
	-COMPUTERNAME=mdl python ../src/exec/vcl2py.py ${ARGUMENTS} -log_file /tmp/old-fail.log ${FAIL_INPUT} /tmp/old.fail 
	find /tmp/old      -type f -exec ruby -E Windows-1252 -i -pe 'gsub(/Generated by vcl2py 2\..*/, "VERSION")' {} \;
	find /tmp/old.fail -type f -exec ruby -E Windows-1252 -i -pe 'gsub(/Generated by vcl2py 2\..*/, "VERSION")' {} \;

clean::
	rm -rf /tmp/old     /tmp/old.fail
	rm -rf /tmp/new     /tmp/new.fail
	rm -rf /tmp/old.log /tmp/old.fail.log 
	rm -rf /tmp/new.log /tmp/new.fail.log 


build-input:
	rm -rf input input.fail
	mkdir  input input.fail
	#
	(cd ~/voice/my_commands; make clean; make source; make)
	cp ~/voice/my_commands/to_Vocola/* input/
	#
	cp ../regression/*.vcl ../regression/*.vch  ../regression/mangling\ tests/*   input/
	cp -r ../regression/subdirectory   input/
	rm input/*fail*
	rm input/subdirectory/*fail*
	cp -r ../regression/*fail* input.fail/
	cp -r ../regression/subdirectory input.fail/
	#
	cp new_inputs/*      input/
	cp new_inputs_fail/* input.fail/

clean::
	rm -rf input input.fail
